# Nome do fluxo de trabalho
nome: Pipeline DevOpsLab

# Evento que irá acionar um pipeline
em:
  Empurre:
    galhos:
      - a Principal

empregos:
  Teste de unidade:
    executado: ubuntu-latest

    degraus:
      - nome: Checkout Repo
        usa: actions/checkout@v2

      - nome: Configuração do Python
        usa: actions/setup-python@v2
        com:
          versão python: '3.10'

      - nome: Requisitos de instalação
        execute: pip install frasco

      - nome: Teste Unitário
        execute: python -m unittest -v test

  SonarCloud:
      nome: Sonar Cloud
      executado: ubuntu-latest
      degraus:
        - usa: actions/checkout@v2
          com:
            fetch-depth: 0 # Clones rasos devem ser desabilitados para uma melhor relevância da análise
        - nome: SonarCloud Scan
          usa: SonarSource/sonarcloud-github-action@master
          ambiente:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necessário para obter informações de PR, se houver
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Construir:
      precisa: [UnitTest, SonarCloud]
      nome: Construir
      executado: ubuntu-latest
      degraus:    
      - nome: Faça login no registro do Heroku Container
        ambiente:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        execute: heroku container:login

      - nome: Docker Image & Push Heroku Registry
        ambiente:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        execute: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

  Implantar:
    necessidades: construir
    executado: ubuntu-latest

    degraus:
      - nome: Implantar Heroku
        ambiente:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        execute: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web